# Global
# TIME_ZONE: UTC (You can change this based on your application's timezone requirement)
# DEBUG: 1 (Set to 1 for debugging purposes, can be set to 0 in production)
# ALLOWED_HOSTS: List of allowed hosts for your Django application
# SECRET_KEY: A secret key used by Django for cryptographic signing
# LOG_FILE_PATH: Path where your application's log file will be stored
# CSRF_TRUSTED_ORIGINS: List of trusted origins for CSRF protection example(https://onlineshoppedramkarimi.ir)
TIME_ZONE=
DEBUG=1
ALLOWED_HOSTS=
SECRET_KEY=
LOG_FILE_PATH=
CSRF_TRUSTED_ORIGINS=



# API:
# API_PORT: Port number on which your API will run
# API_LOG_LEVEL: Logging level for API logs (e.g., info, debug, warning)
# API_WORKERS: Number of worker processes for handling API requests
# API_THREADS: Number of threads per worker process

API_PORT=
API_LOG_LEVEL=
API_WORKERS=
API_THREADS=



# DATABASES Postgresql:
# DB_NAME: Name of your PostgreSQL database
# DB_USER: Username to access the PostgreSQL database
# DB_PASSWORD: Password for the PostgreSQL user
# DB_HOST: Hostname or IP address of the PostgreSQL server
# DB_PORT: Port number where PostgreSQL is running

DB_NAME=
DB_USER=
DB_PASSWORD=
# docker compose DB_HOST: DB_HOST=db
DB_HOST=
DB_PORT=


# E-mail DEBUG MOD:
# DEBUG_EMAIL_BACKEND: Backend for sending emails in debug mode (console backend is used here)
# DEBUG_EMAIL_USE_TLS: Whether to use TLS for sending debug emails
# DEBUG_EMAIL_USE_SSL: Whether to use SSL for sending debug emails
# DEBUG_EMAIL_HOST: SMTP host for sending debug emails
# DEBUG_EMAIL_PORT: SMTP port for sending debug emails
# DEBUG_EMAIL_HOST_USER: Username for SMTP authentication (if required)
# DEBUG_EMAIL_HOST_PASSWORD: Password for SMTP authentication (if required)
# DEBUG_DEFAULT_FROM_EMAIL: Default sender email address for debug emails

DEBUG_EMAIL_BACKEND=
DEBUG_EMAIL_USE_TLS=
DEBUG_EMAIL_USE_SSL=
DEBUG_EMAIL_HOST=
DEBUG_EMAIL_PORT=
DEBUG_EMAIL_HOST_USER=
DEBUG_EMAIL_HOST_PASSWORD=
DEBUG_DEFAULT_FROM_EMAIL=




# E-mail:
# EMAIL_BACKEND: Backend for sending emails in production mode (SMTP backend is used here)
# EMAIL_USE_TLS: Whether to use TLS for sending emails
# EMAIL_USE_SSL: Whether to use SSL for sending emails
# EMAIL_HOST: SMTP host for sending emails
# EMAIL_PORT: SMTP port for sending emails
# EMAIL_HOST_USER: Username for SMTP authentication
# EMAIL_HOST_PASSWORD: Password for SMTP authentication
# DEFAULT_FROM_EMAIL: Default sender email address for production emails

EMAIL_BACKEND=
EMAIL_USE_TLS=
EMAIL_USE_SSL=
EMAIL_HOST=
EMAIL_PORT=
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
DEFAULT_FROM_EMAIL=




# Redis
# docker compose REDIS_HOST: REDIS_HOST=redis
REDIS_HOST=
REDIS_PORT=